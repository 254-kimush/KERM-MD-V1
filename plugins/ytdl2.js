
const { cmd } = require('../command');
const yts = require('yt-search');
const axios = require('axios');

const APIS = [
  'https://api.giftedtech.web.id/api/download/ytmp3?apikey=_0x5aff35,_0x1876stqr&url=',
  'https://api.fgmods.xyz/api/downloader/ytmp3?url=',
  'https://api.siputzx.my.id/api/d/ytmp3?url=',
  'https://apis.davidcyriltech.my.id/download/ytmp3?url=',
  'https://api.giftedtech.web.id/api/download/ytplay?apikey=_0x5aff35,_0x1876stqr&url=',
  'https://api.giftedtech.web.id/api/download/dlmp3?apikey=_0x5aff35,_0x1876stqr&url=',
  'https://api.giftedtech.web.id/api/download/yta?apikey=_0x5aff35,_0x1876stqr&url=',
];

// Command to play/download YouTube audio
cmd(
  {
    pattern: 'song',
    react: '‚úîÔ∏è',
    alias: ['ytmp3', 'ytplay', 'ytdoc', 'play2', 'play3'],
    desc: 'Download audio from YouTube by searching for keywords (using multiple APIs).',
    category: 'music',
    use: '.play <song name or keywords>',
    filename: __filename,
  },
  async (client, message, args, { from, reply }) => {
    try {
      const query = args.join(' ');
      if (!query) {
        return reply('*Please provide a song name or keywords to search for.*');
      }
      reply('_Downloading your song..._');
      
      const searchResults = await yts(query);
      if (!searchResults.videos || searchResults.videos.length === 0) {
        return reply(`‚ùå No results found for "${query}".`);
      }
      
      const video = searchResults.videos[0];
      let downloadUrl = null;
      let songTitle = video.title;
      
      for (const api of APIS) {
        try {
          const response = await axios.get(api + encodeURIComponent(video.url));
          if (response.data.success && response.data.result.download_url) {
            downloadUrl = response.data.result.download_url;
            songTitle = response.data.result.title || songTitle;
            break;
          }
        } catch (error) {
          console.error('API failed: ' + api, error);
        }
      }

      if (!downloadUrl) {
        return reply('‚ùå All APIs failed. Please try again later.');
      }

      await client.sendMessage(
        from,
        {
          document: { url: downloadUrl },
          mimetype: 'audio/mpeg',
          fileName: songTitle + '.mp3',
          caption: '> Generated by Kerm üåπ',
        },
        { quoted: message }
      );

      reply(`‚úÖ *${songTitle}* has been downloaded successfully!`);
    } catch (error) {
      console.error('Error downloading audio:', error);
      reply('‚ùå An error occurred while processing your request.');
    }
  }
);

// Command to download song (similar to "play" command)
cmd(
  {
    pattern: 'song2',
    react: 'üéµ',
    alias: ['yta', 'ytaudio', 'audio', 'song2', 'song3'],
    desc: 'Download audio from YouTube by searching for keywords (using multiple APIs).',
    category: 'music',
    use: '.song <song name or keywords>',
    filename: __filename,
  },
  async (client, message, args, { from, reply }) => {
    try {
      const query = args.join(' ');
      if (!query) {
        return reply('*Please provide a song name or keywords to search for.*');
      }
      reply('_Downloading your song..._');

      const searchResults = await yts(query);
      if (!searchResults.videos || searchResults.videos.length === 0) {
        return reply(`‚ùå No results found for "${query}".`);
      }

      const video = searchResults.videos[0];
      const videoUrl = video.url;
      const downloadUrls = [
        'https://apis.davidcyriltech.my.id/download/ytmp3?url=' + videoUrl,
        'https://api.giftedtech.web.id/api/download/dlmp3?apikey=_0x5aff35,_0x1876stqr&url=' + videoUrl,
        'https://api.fgmods.xyz/api/downloader/ytmp3?url=' + videoUrl,
        'https://www.dark-yasiya-api.site/download/ytmp3?url=' + videoUrl,
      ];

      let downloadUrl;
      for (const url of downloadUrls) {
        try {
          const response = await axios.get(url);
          if (response.data.success) {
            downloadUrl = response.data.result.download_url;
            break;
          }
        } catch (error) {
          console.error('API call failed: ' + url, error);
        }
      }

      if (!downloadUrl) {
        return reply(`‚ùå Failed to fetch audio for "${query}".`);
      }

      const { title, download_url } = downloadUrl;
      await client.sendMessage(
        from,
        {
          audio: { url: download_url },
          mimetype: 'audio/mp4',
          ptt: false,
        },
        { quoted: message }
      );

      reply(`‚úÖ *${title}* has been downloaded successfully!`);
    } catch (error) {
      console.error(error);
      reply('‚ùå An error occurred while processing your request.');
    }
  }
);